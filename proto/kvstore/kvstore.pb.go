// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: proto/kvstore/kvstore.proto

package kvstore

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Basic operations messages
type PutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	TtlSeconds    int64                  `protobuf:"varint,3,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"` // Time to live in seconds (0 = no expiration)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{0}
}

func (x *PutRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutRequest) GetTtlSeconds() int64 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

type PutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{1}
}

func (x *PutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PutResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Found         bool                   `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Unix timestamp
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp (0 = no expiration)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *GetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Existed       bool                   `protobuf:"varint,2,opt,name=existed,proto3" json:"existed,omitempty"` // Whether the key existed before deletion
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetExisted() bool {
	if x != nil {
		return x.Existed
	}
	return false
}

func (x *DeleteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ExistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExistsRequest) Reset() {
	*x = ExistsRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsRequest) ProtoMessage() {}

func (x *ExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsRequest.ProtoReflect.Descriptor instead.
func (*ExistsRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{6}
}

func (x *ExistsRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ExistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExistsResponse) Reset() {
	*x = ExistsResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsResponse) ProtoMessage() {}

func (x *ExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsResponse.ProtoReflect.Descriptor instead.
func (*ExistsResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{7}
}

func (x *ExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *ExistsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Advanced operations messages
type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`  // Maximum number of items to return (0 = no limit)
	Cursor        string                 `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"` // Pagination cursor
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{8}
}

func (x *ListRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*KeyValue            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"` // Cursor for next page
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`         // Whether there are more results
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{9}
}

func (x *ListResponse) GetItems() []*KeyValue {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor        string                 `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListKeysRequest) Reset() {
	*x = ListKeysRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeysRequest) ProtoMessage() {}

func (x *ListKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeysRequest.ProtoReflect.Descriptor instead.
func (*ListKeysRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{10}
}

func (x *ListKeysRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ListKeysRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListKeysRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type ListKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListKeysResponse) Reset() {
	*x = ListKeysResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeysResponse) ProtoMessage() {}

func (x *ListKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeysResponse.ProtoReflect.Descriptor instead.
func (*ListKeysResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{11}
}

func (x *ListKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ListKeysResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListKeysResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListKeysResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type KeyValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{12}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KeyValue) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *KeyValue) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// Batch operations messages
type BatchPutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*PutItem             `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchPutRequest) Reset() {
	*x = BatchPutRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchPutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchPutRequest) ProtoMessage() {}

func (x *BatchPutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchPutRequest.ProtoReflect.Descriptor instead.
func (*BatchPutRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{13}
}

func (x *BatchPutRequest) GetItems() []*PutItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type PutItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	TtlSeconds    int64                  `protobuf:"varint,3,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutItem) Reset() {
	*x = PutItem{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutItem) ProtoMessage() {}

func (x *PutItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutItem.ProtoReflect.Descriptor instead.
func (*PutItem) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{14}
}

func (x *PutItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutItem) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutItem) GetTtlSeconds() int64 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

type BatchPutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SuccessCount  int32                  `protobuf:"varint,1,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	ErrorCount    int32                  `protobuf:"varint,2,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	Errors        []*BatchError          `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchPutResponse) Reset() {
	*x = BatchPutResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchPutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchPutResponse) ProtoMessage() {}

func (x *BatchPutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchPutResponse.ProtoReflect.Descriptor instead.
func (*BatchPutResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{15}
}

func (x *BatchPutResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BatchPutResponse) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *BatchPutResponse) GetErrors() []*BatchError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type BatchGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetRequest) Reset() {
	*x = BatchGetRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetRequest) ProtoMessage() {}

func (x *BatchGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetRequest.ProtoReflect.Descriptor instead.
func (*BatchGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{16}
}

func (x *BatchGetRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type BatchGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*GetResult           `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetResponse) Reset() {
	*x = BatchGetResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetResponse) ProtoMessage() {}

func (x *BatchGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetResponse.ProtoReflect.Descriptor instead.
func (*BatchGetResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{17}
}

func (x *BatchGetResponse) GetResults() []*GetResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchGetResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	Value         []byte                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResult) Reset() {
	*x = GetResult{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResult) ProtoMessage() {}

func (x *GetResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResult.ProtoReflect.Descriptor instead.
func (*GetResult) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{18}
}

func (x *GetResult) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetResult) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *GetResult) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetResult) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetResult) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type BatchDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteRequest) Reset() {
	*x = BatchDeleteRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteRequest) ProtoMessage() {}

func (x *BatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{19}
}

func (x *BatchDeleteRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type BatchDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SuccessCount  int32                  `protobuf:"varint,1,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	ErrorCount    int32                  `protobuf:"varint,2,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	Errors        []*BatchError          `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteResponse) Reset() {
	*x = BatchDeleteResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteResponse) ProtoMessage() {}

func (x *BatchDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteResponse.ProtoReflect.Descriptor instead.
func (*BatchDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{20}
}

func (x *BatchDeleteResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BatchDeleteResponse) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *BatchDeleteResponse) GetErrors() []*BatchError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type BatchError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchError) Reset() {
	*x = BatchError{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchError) ProtoMessage() {}

func (x *BatchError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchError.ProtoReflect.Descriptor instead.
func (*BatchError) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{21}
}

func (x *BatchError) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BatchError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Storage management messages
type BackupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Backup file path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupRequest) Reset() {
	*x = BackupRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupRequest) ProtoMessage() {}

func (x *BackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupRequest.ProtoReflect.Descriptor instead.
func (*BackupRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{22}
}

func (x *BackupRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type BackupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`  // Actual backup file path
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"` // Backup file size in bytes
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupResponse) Reset() {
	*x = BackupResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupResponse) ProtoMessage() {}

func (x *BackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupResponse.ProtoReflect.Descriptor instead.
func (*BackupResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{23}
}

func (x *BackupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BackupResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *BackupResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BackupResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RestoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Restore file path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreRequest) Reset() {
	*x = RestoreRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreRequest) ProtoMessage() {}

func (x *RestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreRequest.ProtoReflect.Descriptor instead.
func (*RestoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{24}
}

func (x *RestoreRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RestoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RestoredCount int64                  `protobuf:"varint,2,opt,name=restored_count,json=restoredCount,proto3" json:"restored_count,omitempty"` // Number of keys restored
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreResponse) Reset() {
	*x = RestoreResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreResponse) ProtoMessage() {}

func (x *RestoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreResponse.ProtoReflect.Descriptor instead.
func (*RestoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{25}
}

func (x *RestoreResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RestoreResponse) GetRestoredCount() int64 {
	if x != nil {
		return x.RestoredCount
	}
	return 0
}

func (x *RestoreResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StatsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IncludeDetails bool                   `protobuf:"varint,1,opt,name=include_details,json=includeDetails,proto3" json:"include_details,omitempty"` // Include detailed statistics
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{26}
}

func (x *StatsRequest) GetIncludeDetails() bool {
	if x != nil {
		return x.IncludeDetails
	}
	return false
}

type StatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalKeys     int64                  `protobuf:"varint,1,opt,name=total_keys,json=totalKeys,proto3" json:"total_keys,omitempty"`
	TotalSize     int64                  `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`                                                     // Total size in bytes
	LsmSize       int64                  `protobuf:"varint,3,opt,name=lsm_size,json=lsmSize,proto3" json:"lsm_size,omitempty"`                                                           // LSM tree size
	VlogSize      int64                  `protobuf:"varint,4,opt,name=vlog_size,json=vlogSize,proto3" json:"vlog_size,omitempty"`                                                        // Value log size
	Details       map[string]string      `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional detailed stats
	Error         string                 `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{27}
}

func (x *StatsResponse) GetTotalKeys() int64 {
	if x != nil {
		return x.TotalKeys
	}
	return 0
}

func (x *StatsResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *StatsResponse) GetLsmSize() int64 {
	if x != nil {
		return x.LsmSize
	}
	return 0
}

func (x *StatsResponse) GetVlogSize() int64 {
	if x != nil {
		return x.VlogSize
	}
	return 0
}

func (x *StatsResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *StatsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Health and status messages
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{28}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{29}
}

func (x *HealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{30}
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Role          string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`                                                                                   // leader, follower, candidate
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`                                                                                 // running, starting, stopping
	Peers         []string               `protobuf:"bytes,4,rep,name=peers,proto3" json:"peers,omitempty"`                                                                                 // Connected peers
	LastApplied   int64                  `protobuf:"varint,5,opt,name=last_applied,json=lastApplied,proto3" json:"last_applied,omitempty"`                                                 // Last applied log index
	CommitIndex   int64                  `protobuf:"varint,6,opt,name=commit_index,json=commitIndex,proto3" json:"commit_index,omitempty"`                                                 // Commit index
	LeaderId      string                 `protobuf:"bytes,7,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`                                                           // Current leader ID
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kvstore_kvstore_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_kvstore_kvstore_proto_rawDescGZIP(), []int{31}
}

func (x *StatusResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StatusResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *StatusResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StatusResponse) GetPeers() []string {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *StatusResponse) GetLastApplied() int64 {
	if x != nil {
		return x.LastApplied
	}
	return 0
}

func (x *StatusResponse) GetCommitIndex() int64 {
	if x != nil {
		return x.CommitIndex
	}
	return 0
}

func (x *StatusResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *StatusResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_kvstore_kvstore_proto protoreflect.FileDescriptor

const file_proto_kvstore_kvstore_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/kvstore/kvstore.proto\x12\akvstore\"U\n" +
	"\n" +
	"PutRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x1f\n" +
	"\vttl_seconds\x18\x03 \x01(\x03R\n" +
	"ttlSeconds\"=\n" +
	"\vPutResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x1e\n" +
	"\n" +
	"GetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"\x8d\x01\n" +
	"\vGetResponse\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\"!\n" +
	"\rDeleteRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"Z\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\aexisted\x18\x02 \x01(\bR\aexisted\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"!\n" +
	"\rExistsRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\">\n" +
	"\x0eExistsResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"S\n" +
	"\vListRequest\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"\x89\x01\n" +
	"\fListResponse\x12'\n" +
	"\x05items\x18\x01 \x03(\v2\x11.kvstore.KeyValueR\x05items\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"W\n" +
	"\x0fListKeysRequest\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"x\n" +
	"\x10ListKeysResponse\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"p\n" +
	"\bKeyValue\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\"9\n" +
	"\x0fBatchPutRequest\x12&\n" +
	"\x05items\x18\x01 \x03(\v2\x10.kvstore.PutItemR\x05items\"R\n" +
	"\aPutItem\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x1f\n" +
	"\vttl_seconds\x18\x03 \x01(\x03R\n" +
	"ttlSeconds\"\x85\x01\n" +
	"\x10BatchPutResponse\x12#\n" +
	"\rsuccess_count\x18\x01 \x01(\x05R\fsuccessCount\x12\x1f\n" +
	"\verror_count\x18\x02 \x01(\x05R\n" +
	"errorCount\x12+\n" +
	"\x06errors\x18\x03 \x03(\v2\x13.kvstore.BatchErrorR\x06errors\"%\n" +
	"\x0fBatchGetRequest\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\"V\n" +
	"\x10BatchGetResponse\x12,\n" +
	"\aresults\x18\x01 \x03(\v2\x12.kvstore.GetResultR\aresults\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x87\x01\n" +
	"\tGetResult\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\x12\x14\n" +
	"\x05value\x18\x03 \x01(\fR\x05value\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\"(\n" +
	"\x12BatchDeleteRequest\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\"\x88\x01\n" +
	"\x13BatchDeleteResponse\x12#\n" +
	"\rsuccess_count\x18\x01 \x01(\x05R\fsuccessCount\x12\x1f\n" +
	"\verror_count\x18\x02 \x01(\x05R\n" +
	"errorCount\x12+\n" +
	"\x06errors\x18\x03 \x03(\v2\x13.kvstore.BatchErrorR\x06errors\"4\n" +
	"\n" +
	"BatchError\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"#\n" +
	"\rBackupRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"h\n" +
	"\x0eBackupResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"$\n" +
	"\x0eRestoreRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"h\n" +
	"\x0fRestoreResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0erestored_count\x18\x02 \x01(\x03R\rrestoredCount\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"7\n" +
	"\fStatsRequest\x12'\n" +
	"\x0finclude_details\x18\x01 \x01(\bR\x0eincludeDetails\"\x96\x02\n" +
	"\rStatsResponse\x12\x1d\n" +
	"\n" +
	"total_keys\x18\x01 \x01(\x03R\ttotalKeys\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x03R\ttotalSize\x12\x19\n" +
	"\blsm_size\x18\x03 \x01(\x03R\alsmSize\x12\x1b\n" +
	"\tvlog_size\x18\x04 \x01(\x03R\bvlogSize\x12=\n" +
	"\adetails\x18\x05 \x03(\v2#.kvstore.StatsResponse.DetailsEntryR\adetails\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x0f\n" +
	"\rHealthRequest\"\x83\x01\n" +
	"\x0eHealthResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12%\n" +
	"\x0euptime_seconds\x18\x03 \x01(\x03R\ruptimeSeconds\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\"\x0f\n" +
	"\rStatusRequest\"\xcc\x02\n" +
	"\x0eStatusResponse\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12\x14\n" +
	"\x05state\x18\x03 \x01(\tR\x05state\x12\x14\n" +
	"\x05peers\x18\x04 \x03(\tR\x05peers\x12!\n" +
	"\flast_applied\x18\x05 \x01(\x03R\vlastApplied\x12!\n" +
	"\fcommit_index\x18\x06 \x01(\x03R\vcommitIndex\x12\x1b\n" +
	"\tleader_id\x18\a \x01(\tR\bleaderId\x12A\n" +
	"\bmetadata\x18\b \x03(\v2%.kvstore.StatusResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xcc\x06\n" +
	"\aKVStore\x120\n" +
	"\x03Put\x12\x13.kvstore.PutRequest\x1a\x14.kvstore.PutResponse\x120\n" +
	"\x03Get\x12\x13.kvstore.GetRequest\x1a\x14.kvstore.GetResponse\x129\n" +
	"\x06Delete\x12\x16.kvstore.DeleteRequest\x1a\x17.kvstore.DeleteResponse\x129\n" +
	"\x06Exists\x12\x16.kvstore.ExistsRequest\x1a\x17.kvstore.ExistsResponse\x123\n" +
	"\x04List\x12\x14.kvstore.ListRequest\x1a\x15.kvstore.ListResponse\x12?\n" +
	"\bListKeys\x12\x18.kvstore.ListKeysRequest\x1a\x19.kvstore.ListKeysResponse\x12?\n" +
	"\bBatchPut\x12\x18.kvstore.BatchPutRequest\x1a\x19.kvstore.BatchPutResponse\x12?\n" +
	"\bBatchGet\x12\x18.kvstore.BatchGetRequest\x1a\x19.kvstore.BatchGetResponse\x12H\n" +
	"\vBatchDelete\x12\x1b.kvstore.BatchDeleteRequest\x1a\x1c.kvstore.BatchDeleteResponse\x129\n" +
	"\x06Backup\x12\x16.kvstore.BackupRequest\x1a\x17.kvstore.BackupResponse\x12<\n" +
	"\aRestore\x12\x17.kvstore.RestoreRequest\x1a\x18.kvstore.RestoreResponse\x126\n" +
	"\x05Stats\x12\x15.kvstore.StatsRequest\x1a\x16.kvstore.StatsResponse\x129\n" +
	"\x06Health\x12\x16.kvstore.HealthRequest\x1a\x17.kvstore.HealthResponse\x129\n" +
	"\x06Status\x12\x16.kvstore.StatusRequest\x1a\x17.kvstore.StatusResponseB#Z!distributed-kvstore/proto/kvstoreb\x06proto3"

var (
	file_proto_kvstore_kvstore_proto_rawDescOnce sync.Once
	file_proto_kvstore_kvstore_proto_rawDescData []byte
)

func file_proto_kvstore_kvstore_proto_rawDescGZIP() []byte {
	file_proto_kvstore_kvstore_proto_rawDescOnce.Do(func() {
		file_proto_kvstore_kvstore_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_kvstore_kvstore_proto_rawDesc), len(file_proto_kvstore_kvstore_proto_rawDesc)))
	})
	return file_proto_kvstore_kvstore_proto_rawDescData
}

var file_proto_kvstore_kvstore_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_proto_kvstore_kvstore_proto_goTypes = []any{
	(*PutRequest)(nil),          // 0: kvstore.PutRequest
	(*PutResponse)(nil),         // 1: kvstore.PutResponse
	(*GetRequest)(nil),          // 2: kvstore.GetRequest
	(*GetResponse)(nil),         // 3: kvstore.GetResponse
	(*DeleteRequest)(nil),       // 4: kvstore.DeleteRequest
	(*DeleteResponse)(nil),      // 5: kvstore.DeleteResponse
	(*ExistsRequest)(nil),       // 6: kvstore.ExistsRequest
	(*ExistsResponse)(nil),      // 7: kvstore.ExistsResponse
	(*ListRequest)(nil),         // 8: kvstore.ListRequest
	(*ListResponse)(nil),        // 9: kvstore.ListResponse
	(*ListKeysRequest)(nil),     // 10: kvstore.ListKeysRequest
	(*ListKeysResponse)(nil),    // 11: kvstore.ListKeysResponse
	(*KeyValue)(nil),            // 12: kvstore.KeyValue
	(*BatchPutRequest)(nil),     // 13: kvstore.BatchPutRequest
	(*PutItem)(nil),             // 14: kvstore.PutItem
	(*BatchPutResponse)(nil),    // 15: kvstore.BatchPutResponse
	(*BatchGetRequest)(nil),     // 16: kvstore.BatchGetRequest
	(*BatchGetResponse)(nil),    // 17: kvstore.BatchGetResponse
	(*GetResult)(nil),           // 18: kvstore.GetResult
	(*BatchDeleteRequest)(nil),  // 19: kvstore.BatchDeleteRequest
	(*BatchDeleteResponse)(nil), // 20: kvstore.BatchDeleteResponse
	(*BatchError)(nil),          // 21: kvstore.BatchError
	(*BackupRequest)(nil),       // 22: kvstore.BackupRequest
	(*BackupResponse)(nil),      // 23: kvstore.BackupResponse
	(*RestoreRequest)(nil),      // 24: kvstore.RestoreRequest
	(*RestoreResponse)(nil),     // 25: kvstore.RestoreResponse
	(*StatsRequest)(nil),        // 26: kvstore.StatsRequest
	(*StatsResponse)(nil),       // 27: kvstore.StatsResponse
	(*HealthRequest)(nil),       // 28: kvstore.HealthRequest
	(*HealthResponse)(nil),      // 29: kvstore.HealthResponse
	(*StatusRequest)(nil),       // 30: kvstore.StatusRequest
	(*StatusResponse)(nil),      // 31: kvstore.StatusResponse
	nil,                         // 32: kvstore.StatsResponse.DetailsEntry
	nil,                         // 33: kvstore.StatusResponse.MetadataEntry
}
var file_proto_kvstore_kvstore_proto_depIdxs = []int32{
	12, // 0: kvstore.ListResponse.items:type_name -> kvstore.KeyValue
	14, // 1: kvstore.BatchPutRequest.items:type_name -> kvstore.PutItem
	21, // 2: kvstore.BatchPutResponse.errors:type_name -> kvstore.BatchError
	18, // 3: kvstore.BatchGetResponse.results:type_name -> kvstore.GetResult
	21, // 4: kvstore.BatchDeleteResponse.errors:type_name -> kvstore.BatchError
	32, // 5: kvstore.StatsResponse.details:type_name -> kvstore.StatsResponse.DetailsEntry
	33, // 6: kvstore.StatusResponse.metadata:type_name -> kvstore.StatusResponse.MetadataEntry
	0,  // 7: kvstore.KVStore.Put:input_type -> kvstore.PutRequest
	2,  // 8: kvstore.KVStore.Get:input_type -> kvstore.GetRequest
	4,  // 9: kvstore.KVStore.Delete:input_type -> kvstore.DeleteRequest
	6,  // 10: kvstore.KVStore.Exists:input_type -> kvstore.ExistsRequest
	8,  // 11: kvstore.KVStore.List:input_type -> kvstore.ListRequest
	10, // 12: kvstore.KVStore.ListKeys:input_type -> kvstore.ListKeysRequest
	13, // 13: kvstore.KVStore.BatchPut:input_type -> kvstore.BatchPutRequest
	16, // 14: kvstore.KVStore.BatchGet:input_type -> kvstore.BatchGetRequest
	19, // 15: kvstore.KVStore.BatchDelete:input_type -> kvstore.BatchDeleteRequest
	22, // 16: kvstore.KVStore.Backup:input_type -> kvstore.BackupRequest
	24, // 17: kvstore.KVStore.Restore:input_type -> kvstore.RestoreRequest
	26, // 18: kvstore.KVStore.Stats:input_type -> kvstore.StatsRequest
	28, // 19: kvstore.KVStore.Health:input_type -> kvstore.HealthRequest
	30, // 20: kvstore.KVStore.Status:input_type -> kvstore.StatusRequest
	1,  // 21: kvstore.KVStore.Put:output_type -> kvstore.PutResponse
	3,  // 22: kvstore.KVStore.Get:output_type -> kvstore.GetResponse
	5,  // 23: kvstore.KVStore.Delete:output_type -> kvstore.DeleteResponse
	7,  // 24: kvstore.KVStore.Exists:output_type -> kvstore.ExistsResponse
	9,  // 25: kvstore.KVStore.List:output_type -> kvstore.ListResponse
	11, // 26: kvstore.KVStore.ListKeys:output_type -> kvstore.ListKeysResponse
	15, // 27: kvstore.KVStore.BatchPut:output_type -> kvstore.BatchPutResponse
	17, // 28: kvstore.KVStore.BatchGet:output_type -> kvstore.BatchGetResponse
	20, // 29: kvstore.KVStore.BatchDelete:output_type -> kvstore.BatchDeleteResponse
	23, // 30: kvstore.KVStore.Backup:output_type -> kvstore.BackupResponse
	25, // 31: kvstore.KVStore.Restore:output_type -> kvstore.RestoreResponse
	27, // 32: kvstore.KVStore.Stats:output_type -> kvstore.StatsResponse
	29, // 33: kvstore.KVStore.Health:output_type -> kvstore.HealthResponse
	31, // 34: kvstore.KVStore.Status:output_type -> kvstore.StatusResponse
	21, // [21:35] is the sub-list for method output_type
	7,  // [7:21] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_kvstore_kvstore_proto_init() }
func file_proto_kvstore_kvstore_proto_init() {
	if File_proto_kvstore_kvstore_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_kvstore_kvstore_proto_rawDesc), len(file_proto_kvstore_kvstore_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_kvstore_kvstore_proto_goTypes,
		DependencyIndexes: file_proto_kvstore_kvstore_proto_depIdxs,
		MessageInfos:      file_proto_kvstore_kvstore_proto_msgTypes,
	}.Build()
	File_proto_kvstore_kvstore_proto = out.File
	file_proto_kvstore_kvstore_proto_goTypes = nil
	file_proto_kvstore_kvstore_proto_depIdxs = nil
}
