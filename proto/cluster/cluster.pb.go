// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: proto/cluster/cluster.proto

package cluster

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Node management messages
type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                                                                             // Node's network address
	RaftPort      int32                  `protobuf:"varint,3,opt,name=raft_port,json=raftPort,proto3" json:"raft_port,omitempty"`                                                          // Node's Raft port
	GrpcPort      int32                  `protobuf:"varint,4,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"`                                                          // Node's gRPC port
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional node metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *JoinRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *JoinRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *JoinRequest) GetRaftPort() int32 {
	if x != nil {
		return x.RaftPort
	}
	return 0
}

func (x *JoinRequest) GetGrpcPort() int32 {
	if x != nil {
		return x.GrpcPort
	}
	return 0
}

func (x *JoinRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	LeaderId      string                 `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	Nodes         []*NodeInfo            `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"` // Current cluster nodes
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *JoinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *JoinResponse) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *JoinResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type LeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"` // Force removal even if node is unreachable
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *LeaveRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *LeaveRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type LeaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveResponse) Reset() {
	*x = LeaveResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveResponse) ProtoMessage() {}

func (x *LeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveResponse.ProtoReflect.Descriptor instead.
func (*LeaveResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *LeaveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeaveResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesRequest) Reset() {
	*x = GetNodesRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesRequest) ProtoMessage() {}

func (x *GetNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesRequest.ProtoReflect.Descriptor instead.
func (*GetNodesRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{4}
}

type GetNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*NodeInfo            `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesResponse) Reset() {
	*x = GetNodesResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesResponse) ProtoMessage() {}

func (x *GetNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesResponse.ProtoReflect.Descriptor instead.
func (*GetNodesResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *GetNodesResponse) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetNodesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	RaftPort      int32                  `protobuf:"varint,3,opt,name=raft_port,json=raftPort,proto3" json:"raft_port,omitempty"`
	GrpcPort      int32                  `protobuf:"varint,4,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"`
	State         string                 `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`                        // active, inactive, failed
	Role          string                 `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`                          // leader, follower, candidate
	LastSeen      int64                  `protobuf:"varint,7,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"` // Unix timestamp
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *NodeInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NodeInfo) GetRaftPort() int32 {
	if x != nil {
		return x.RaftPort
	}
	return 0
}

func (x *NodeInfo) GetGrpcPort() int32 {
	if x != nil {
		return x.GrpcPort
	}
	return 0
}

func (x *NodeInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *NodeInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *NodeInfo) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

func (x *NodeInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Raft consensus messages
type VoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId   string                 `protobuf:"bytes,2,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	LastLogIndex  int64                  `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm   int64                  `protobuf:"varint,4,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *VoteRequest) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteRequest) GetCandidateId() string {
	if x != nil {
		return x.CandidateId
	}
	return ""
}

func (x *VoteRequest) GetLastLogIndex() int64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *VoteRequest) GetLastLogTerm() int64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type VoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted   bool                   `protobuf:"varint,2,opt,name=vote_granted,json=voteGranted,proto3" json:"vote_granted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *VoteResponse) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteResponse) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

type AppendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId      string                 `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	PrevLogIndex  int64                  `protobuf:"varint,3,opt,name=prev_log_index,json=prevLogIndex,proto3" json:"prev_log_index,omitempty"`
	PrevLogTerm   int64                  `protobuf:"varint,4,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	Entries       []*LogEntry            `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit  int64                  `protobuf:"varint,6,opt,name=leader_commit,json=leaderCommit,proto3" json:"leader_commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendRequest) Reset() {
	*x = AppendRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendRequest) ProtoMessage() {}

func (x *AppendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendRequest.ProtoReflect.Descriptor instead.
func (*AppendRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *AppendRequest) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *AppendRequest) GetPrevLogIndex() int64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendRequest) GetPrevLogTerm() int64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendRequest) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendRequest) GetLeaderCommit() int64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

type AppendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	LastLogIndex  int64                  `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"` // For leader to update nextIndex
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendResponse) Reset() {
	*x = AppendResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResponse) ProtoMessage() {}

func (x *AppendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResponse.ProtoReflect.Descriptor instead.
func (*AppendResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *AppendResponse) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AppendResponse) GetLastLogIndex() int64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int64                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Term          int64                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`            // PUT, DELETE, NOOP
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`            // Serialized operation data
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{11}
}

func (x *LogEntry) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *LogEntry) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntry) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LogEntry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LogEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type SnapshotRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Term              int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId          string                 `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LastIncludedIndex int64                  `protobuf:"varint,3,opt,name=last_included_index,json=lastIncludedIndex,proto3" json:"last_included_index,omitempty"`
	LastIncludedTerm  int64                  `protobuf:"varint,4,opt,name=last_included_term,json=lastIncludedTerm,proto3" json:"last_included_term,omitempty"`
	Data              []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`      // Snapshot data
	Done              bool                   `protobuf:"varint,6,opt,name=done,proto3" json:"done,omitempty"`     // Whether this is the last chunk
	Offset            int64                  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"` // Offset for chunked transfer
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{12}
}

func (x *SnapshotRequest) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *SnapshotRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *SnapshotRequest) GetLastIncludedIndex() int64 {
	if x != nil {
		return x.LastIncludedIndex
	}
	return 0
}

func (x *SnapshotRequest) GetLastIncludedTerm() int64 {
	if x != nil {
		return x.LastIncludedTerm
	}
	return 0
}

func (x *SnapshotRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SnapshotRequest) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *SnapshotRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int64                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotResponse) Reset() {
	*x = SnapshotResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotResponse) ProtoMessage() {}

func (x *SnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotResponse.ProtoReflect.Descriptor instead.
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{13}
}

func (x *SnapshotResponse) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *SnapshotResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Data replication messages
type ReplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operations    []*Operation           `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	LogIndex      int64                  `protobuf:"varint,2,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	LeaderId      string                 `protobuf:"bytes,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicationRequest) Reset() {
	*x = ReplicationRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationRequest) ProtoMessage() {}

func (x *ReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationRequest.ProtoReflect.Descriptor instead.
func (*ReplicationRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{14}
}

func (x *ReplicationRequest) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ReplicationRequest) GetLogIndex() int64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *ReplicationRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

type Operation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // PUT, DELETE
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Operation) Reset() {
	*x = Operation{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{15}
}

func (x *Operation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Operation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Operation) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Operation) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Operation) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ReplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	LastApplied   int64                  `protobuf:"varint,2,opt,name=last_applied,json=lastApplied,proto3" json:"last_applied,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicationResponse) Reset() {
	*x = ReplicationResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationResponse) ProtoMessage() {}

func (x *ReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationResponse.ProtoReflect.Descriptor instead.
func (*ReplicationResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{16}
}

func (x *ReplicationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReplicationResponse) GetLastApplied() int64 {
	if x != nil {
		return x.LastApplied
	}
	return 0
}

func (x *ReplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	LastIndex     int64                  `protobuf:"varint,2,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"` // Last known log index
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{17}
}

func (x *SyncRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SyncRequest) GetLastIndex() int64 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

type SyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*LogEntry            `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	CurrentIndex  int64                  `protobuf:"varint,2,opt,name=current_index,json=currentIndex,proto3" json:"current_index,omitempty"`
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{18}
}

func (x *SyncResponse) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *SyncResponse) GetCurrentIndex() int64 {
	if x != nil {
		return x.CurrentIndex
	}
	return 0
}

func (x *SyncResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *SyncResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Health and monitoring messages
type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{19}
}

func (x *PingRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PingRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{20}
}

func (x *PingResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PingResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PingResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ClusterStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterStatusRequest) Reset() {
	*x = ClusterStatusRequest{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusRequest) ProtoMessage() {}

func (x *ClusterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusRequest.ProtoReflect.Descriptor instead.
func (*ClusterStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{21}
}

type ClusterStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaderId      string                 `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	TotalNodes    int32                  `protobuf:"varint,2,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	ActiveNodes   int32                  `protobuf:"varint,3,opt,name=active_nodes,json=activeNodes,proto3" json:"active_nodes,omitempty"`
	FailedNodes   int32                  `protobuf:"varint,4,opt,name=failed_nodes,json=failedNodes,proto3" json:"failed_nodes,omitempty"`
	Nodes         []*NodeInfo            `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Health        *ClusterHealth         `protobuf:"bytes,6,opt,name=health,proto3" json:"health,omitempty"`
	Error         string                 `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterStatusResponse) Reset() {
	*x = ClusterStatusResponse{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusResponse) ProtoMessage() {}

func (x *ClusterStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusResponse.ProtoReflect.Descriptor instead.
func (*ClusterStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{22}
}

func (x *ClusterStatusResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *ClusterStatusResponse) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *ClusterStatusResponse) GetActiveNodes() int32 {
	if x != nil {
		return x.ActiveNodes
	}
	return 0
}

func (x *ClusterStatusResponse) GetFailedNodes() int32 {
	if x != nil {
		return x.FailedNodes
	}
	return 0
}

func (x *ClusterStatusResponse) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ClusterStatusResponse) GetHealth() *ClusterHealth {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *ClusterStatusResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ClusterHealth struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                                         // healthy, degraded, unhealthy
	ConsensusRatio float64                `protobuf:"fixed64,2,opt,name=consensus_ratio,json=consensusRatio,proto3" json:"consensus_ratio,omitempty"` // Ratio of nodes that can reach consensus
	LastElection   int64                  `protobuf:"varint,3,opt,name=last_election,json=lastElection,proto3" json:"last_election,omitempty"`        // Unix timestamp of last leader election
	Uptime         int64                  `protobuf:"varint,4,opt,name=uptime,proto3" json:"uptime,omitempty"`                                        // Cluster uptime in seconds
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClusterHealth) Reset() {
	*x = ClusterHealth{}
	mi := &file_proto_cluster_cluster_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterHealth) ProtoMessage() {}

func (x *ClusterHealth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cluster_cluster_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterHealth.ProtoReflect.Descriptor instead.
func (*ClusterHealth) Descriptor() ([]byte, []int) {
	return file_proto_cluster_cluster_proto_rawDescGZIP(), []int{23}
}

func (x *ClusterHealth) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ClusterHealth) GetConsensusRatio() float64 {
	if x != nil {
		return x.ConsensusRatio
	}
	return 0
}

func (x *ClusterHealth) GetLastElection() int64 {
	if x != nil {
		return x.LastElection
	}
	return 0
}

func (x *ClusterHealth) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

var File_proto_cluster_cluster_proto protoreflect.FileDescriptor

const file_proto_cluster_cluster_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/cluster/cluster.proto\x12\acluster\"\xf7\x01\n" +
	"\vJoinRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1b\n" +
	"\traft_port\x18\x03 \x01(\x05R\braftPort\x12\x1b\n" +
	"\tgrpc_port\x18\x04 \x01(\x05R\bgrpcPort\x12>\n" +
	"\bmetadata\x18\x05 \x03(\v2\".cluster.JoinRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x01\n" +
	"\fJoinResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\tR\bleaderId\x12'\n" +
	"\x05nodes\x18\x03 \x03(\v2\x11.cluster.NodeInfoR\x05nodes\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"=\n" +
	"\fLeaveRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"?\n" +
	"\rLeaveResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x11\n" +
	"\x0fGetNodesRequest\"Q\n" +
	"\x10GetNodesResponse\x12'\n" +
	"\x05nodes\x18\x01 \x03(\v2\x11.cluster.NodeInfoR\x05nodes\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xb8\x02\n" +
	"\bNodeInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1b\n" +
	"\traft_port\x18\x03 \x01(\x05R\braftPort\x12\x1b\n" +
	"\tgrpc_port\x18\x04 \x01(\x05R\bgrpcPort\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12\x12\n" +
	"\x04role\x18\x06 \x01(\tR\x04role\x12\x1b\n" +
	"\tlast_seen\x18\a \x01(\x03R\blastSeen\x12;\n" +
	"\bmetadata\x18\b \x03(\v2\x1f.cluster.NodeInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8e\x01\n" +
	"\vVoteRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12!\n" +
	"\fcandidate_id\x18\x02 \x01(\tR\vcandidateId\x12$\n" +
	"\x0elast_log_index\x18\x03 \x01(\x03R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x04 \x01(\x03R\vlastLogTerm\"E\n" +
	"\fVoteResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12!\n" +
	"\fvote_granted\x18\x02 \x01(\bR\vvoteGranted\"\xdc\x01\n" +
	"\rAppendRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\tR\bleaderId\x12$\n" +
	"\x0eprev_log_index\x18\x03 \x01(\x03R\fprevLogIndex\x12\"\n" +
	"\rprev_log_term\x18\x04 \x01(\x03R\vprevLogTerm\x12+\n" +
	"\aentries\x18\x05 \x03(\v2\x11.cluster.LogEntryR\aentries\x12#\n" +
	"\rleader_commit\x18\x06 \x01(\x03R\fleaderCommit\"d\n" +
	"\x0eAppendResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12$\n" +
	"\x0elast_log_index\x18\x03 \x01(\x03R\flastLogIndex\"z\n" +
	"\bLogEntry\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x03R\x05index\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x03R\x04term\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"\xe0\x01\n" +
	"\x0fSnapshotRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\tR\bleaderId\x12.\n" +
	"\x13last_included_index\x18\x03 \x01(\x03R\x11lastIncludedIndex\x12,\n" +
	"\x12last_included_term\x18\x04 \x01(\x03R\x10lastIncludedTerm\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12\x12\n" +
	"\x04done\x18\x06 \x01(\bR\x04done\x12\x16\n" +
	"\x06offset\x18\a \x01(\x03R\x06offset\"@\n" +
	"\x10SnapshotResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x03R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"\x82\x01\n" +
	"\x12ReplicationRequest\x122\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2\x12.cluster.OperationR\n" +
	"operations\x12\x1b\n" +
	"\tlog_index\x18\x02 \x01(\x03R\blogIndex\x12\x1b\n" +
	"\tleader_id\x18\x03 \x01(\tR\bleaderId\"\xe0\x01\n" +
	"\tOperation\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x03 \x01(\fR\x05value\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12<\n" +
	"\bmetadata\x18\x05 \x03(\v2 .cluster.Operation.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"h\n" +
	"\x13ReplicationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\flast_applied\x18\x02 \x01(\x03R\vlastApplied\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"E\n" +
	"\vSyncRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1d\n" +
	"\n" +
	"last_index\x18\x02 \x01(\x03R\tlastIndex\"\x91\x01\n" +
	"\fSyncResponse\x12+\n" +
	"\aentries\x18\x01 \x03(\v2\x11.cluster.LogEntryR\aentries\x12#\n" +
	"\rcurrent_index\x18\x02 \x01(\x03R\fcurrentIndex\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"D\n" +
	"\vPingRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"]\n" +
	"\fPingResponse\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"\x16\n" +
	"\x14ClusterStatusRequest\"\x8a\x02\n" +
	"\x15ClusterStatusResponse\x12\x1b\n" +
	"\tleader_id\x18\x01 \x01(\tR\bleaderId\x12\x1f\n" +
	"\vtotal_nodes\x18\x02 \x01(\x05R\n" +
	"totalNodes\x12!\n" +
	"\factive_nodes\x18\x03 \x01(\x05R\vactiveNodes\x12!\n" +
	"\ffailed_nodes\x18\x04 \x01(\x05R\vfailedNodes\x12'\n" +
	"\x05nodes\x18\x05 \x03(\v2\x11.cluster.NodeInfoR\x05nodes\x12.\n" +
	"\x06health\x18\x06 \x01(\v2\x16.cluster.ClusterHealthR\x06health\x12\x14\n" +
	"\x05error\x18\a \x01(\tR\x05error\"\x8d\x01\n" +
	"\rClusterHealth\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12'\n" +
	"\x0fconsensus_ratio\x18\x02 \x01(\x01R\x0econsensusRatio\x12#\n" +
	"\rlast_election\x18\x03 \x01(\x03R\flastElection\x12\x16\n" +
	"\x06uptime\x18\x04 \x01(\x03R\x06uptime2\x9f\x05\n" +
	"\x0eClusterService\x12:\n" +
	"\vJoinCluster\x12\x14.cluster.JoinRequest\x1a\x15.cluster.JoinResponse\x12=\n" +
	"\fLeaveCluster\x12\x15.cluster.LeaveRequest\x1a\x16.cluster.LeaveResponse\x12?\n" +
	"\bGetNodes\x12\x18.cluster.GetNodesRequest\x1a\x19.cluster.GetNodesResponse\x12:\n" +
	"\vRequestVote\x12\x14.cluster.VoteRequest\x1a\x15.cluster.VoteResponse\x12@\n" +
	"\rAppendEntries\x12\x16.cluster.AppendRequest\x1a\x17.cluster.AppendResponse\x12F\n" +
	"\x0fInstallSnapshot\x12\x18.cluster.SnapshotRequest\x1a\x19.cluster.SnapshotResponse\x12J\n" +
	"\rReplicateData\x12\x1b.cluster.ReplicationRequest\x1a\x1c.cluster.ReplicationResponse\x127\n" +
	"\bSyncData\x12\x14.cluster.SyncRequest\x1a\x15.cluster.SyncResponse\x123\n" +
	"\x04Ping\x12\x14.cluster.PingRequest\x1a\x15.cluster.PingResponse\x12Q\n" +
	"\x10GetClusterStatus\x12\x1d.cluster.ClusterStatusRequest\x1a\x1e.cluster.ClusterStatusResponseB#Z!distributed-kvstore/proto/clusterb\x06proto3"

var (
	file_proto_cluster_cluster_proto_rawDescOnce sync.Once
	file_proto_cluster_cluster_proto_rawDescData []byte
)

func file_proto_cluster_cluster_proto_rawDescGZIP() []byte {
	file_proto_cluster_cluster_proto_rawDescOnce.Do(func() {
		file_proto_cluster_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_cluster_cluster_proto_rawDesc), len(file_proto_cluster_cluster_proto_rawDesc)))
	})
	return file_proto_cluster_cluster_proto_rawDescData
}

var file_proto_cluster_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_proto_cluster_cluster_proto_goTypes = []any{
	(*JoinRequest)(nil),           // 0: cluster.JoinRequest
	(*JoinResponse)(nil),          // 1: cluster.JoinResponse
	(*LeaveRequest)(nil),          // 2: cluster.LeaveRequest
	(*LeaveResponse)(nil),         // 3: cluster.LeaveResponse
	(*GetNodesRequest)(nil),       // 4: cluster.GetNodesRequest
	(*GetNodesResponse)(nil),      // 5: cluster.GetNodesResponse
	(*NodeInfo)(nil),              // 6: cluster.NodeInfo
	(*VoteRequest)(nil),           // 7: cluster.VoteRequest
	(*VoteResponse)(nil),          // 8: cluster.VoteResponse
	(*AppendRequest)(nil),         // 9: cluster.AppendRequest
	(*AppendResponse)(nil),        // 10: cluster.AppendResponse
	(*LogEntry)(nil),              // 11: cluster.LogEntry
	(*SnapshotRequest)(nil),       // 12: cluster.SnapshotRequest
	(*SnapshotResponse)(nil),      // 13: cluster.SnapshotResponse
	(*ReplicationRequest)(nil),    // 14: cluster.ReplicationRequest
	(*Operation)(nil),             // 15: cluster.Operation
	(*ReplicationResponse)(nil),   // 16: cluster.ReplicationResponse
	(*SyncRequest)(nil),           // 17: cluster.SyncRequest
	(*SyncResponse)(nil),          // 18: cluster.SyncResponse
	(*PingRequest)(nil),           // 19: cluster.PingRequest
	(*PingResponse)(nil),          // 20: cluster.PingResponse
	(*ClusterStatusRequest)(nil),  // 21: cluster.ClusterStatusRequest
	(*ClusterStatusResponse)(nil), // 22: cluster.ClusterStatusResponse
	(*ClusterHealth)(nil),         // 23: cluster.ClusterHealth
	nil,                           // 24: cluster.JoinRequest.MetadataEntry
	nil,                           // 25: cluster.NodeInfo.MetadataEntry
	nil,                           // 26: cluster.Operation.MetadataEntry
}
var file_proto_cluster_cluster_proto_depIdxs = []int32{
	24, // 0: cluster.JoinRequest.metadata:type_name -> cluster.JoinRequest.MetadataEntry
	6,  // 1: cluster.JoinResponse.nodes:type_name -> cluster.NodeInfo
	6,  // 2: cluster.GetNodesResponse.nodes:type_name -> cluster.NodeInfo
	25, // 3: cluster.NodeInfo.metadata:type_name -> cluster.NodeInfo.MetadataEntry
	11, // 4: cluster.AppendRequest.entries:type_name -> cluster.LogEntry
	15, // 5: cluster.ReplicationRequest.operations:type_name -> cluster.Operation
	26, // 6: cluster.Operation.metadata:type_name -> cluster.Operation.MetadataEntry
	11, // 7: cluster.SyncResponse.entries:type_name -> cluster.LogEntry
	6,  // 8: cluster.ClusterStatusResponse.nodes:type_name -> cluster.NodeInfo
	23, // 9: cluster.ClusterStatusResponse.health:type_name -> cluster.ClusterHealth
	0,  // 10: cluster.ClusterService.JoinCluster:input_type -> cluster.JoinRequest
	2,  // 11: cluster.ClusterService.LeaveCluster:input_type -> cluster.LeaveRequest
	4,  // 12: cluster.ClusterService.GetNodes:input_type -> cluster.GetNodesRequest
	7,  // 13: cluster.ClusterService.RequestVote:input_type -> cluster.VoteRequest
	9,  // 14: cluster.ClusterService.AppendEntries:input_type -> cluster.AppendRequest
	12, // 15: cluster.ClusterService.InstallSnapshot:input_type -> cluster.SnapshotRequest
	14, // 16: cluster.ClusterService.ReplicateData:input_type -> cluster.ReplicationRequest
	17, // 17: cluster.ClusterService.SyncData:input_type -> cluster.SyncRequest
	19, // 18: cluster.ClusterService.Ping:input_type -> cluster.PingRequest
	21, // 19: cluster.ClusterService.GetClusterStatus:input_type -> cluster.ClusterStatusRequest
	1,  // 20: cluster.ClusterService.JoinCluster:output_type -> cluster.JoinResponse
	3,  // 21: cluster.ClusterService.LeaveCluster:output_type -> cluster.LeaveResponse
	5,  // 22: cluster.ClusterService.GetNodes:output_type -> cluster.GetNodesResponse
	8,  // 23: cluster.ClusterService.RequestVote:output_type -> cluster.VoteResponse
	10, // 24: cluster.ClusterService.AppendEntries:output_type -> cluster.AppendResponse
	13, // 25: cluster.ClusterService.InstallSnapshot:output_type -> cluster.SnapshotResponse
	16, // 26: cluster.ClusterService.ReplicateData:output_type -> cluster.ReplicationResponse
	18, // 27: cluster.ClusterService.SyncData:output_type -> cluster.SyncResponse
	20, // 28: cluster.ClusterService.Ping:output_type -> cluster.PingResponse
	22, // 29: cluster.ClusterService.GetClusterStatus:output_type -> cluster.ClusterStatusResponse
	20, // [20:30] is the sub-list for method output_type
	10, // [10:20] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_cluster_cluster_proto_init() }
func file_proto_cluster_cluster_proto_init() {
	if File_proto_cluster_cluster_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_cluster_cluster_proto_rawDesc), len(file_proto_cluster_cluster_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cluster_cluster_proto_goTypes,
		DependencyIndexes: file_proto_cluster_cluster_proto_depIdxs,
		MessageInfos:      file_proto_cluster_cluster_proto_msgTypes,
	}.Build()
	File_proto_cluster_cluster_proto = out.File
	file_proto_cluster_cluster_proto_goTypes = nil
	file_proto_cluster_cluster_proto_depIdxs = nil
}
