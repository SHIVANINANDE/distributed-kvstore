repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: detect-private-key

  - repo: local
    hooks:
      - id: gofmt
        name: gofmt
        entry: gofmt
        language: system
        types: [go]
        args: [-w]

      - id: goimports
        name: goimports
        entry: goimports
        language: system
        types: [go]
        args: [-w]

      - id: golangci-lint
        name: golangci-lint
        entry: golangci-lint
        language: system
        types: [go]
        args: [run, --fix]
        pass_filenames: false

      - id: go-vet
        name: go vet
        entry: go
        language: system
        types: [go]
        args: [vet, ./...]
        pass_filenames: false

      - id: go-test
        name: go test
        entry: go
        language: system
        types: [go]
        args: [test, ./internal/storage, ./internal/config, -short]
        pass_filenames: false

      - id: go-mod-tidy
        name: go mod tidy
        entry: go
        language: system
        types: [go]
        args: [mod, tidy]
        pass_filenames: false

      - id: protobuf-check
        name: protobuf check
        entry: bash
        language: system
        files: \.proto$
        args:
          - -c
          - |
            # Check if protobuf files have been modified and regenerate if needed
            if [ -f "scripts/generate-proto.sh" ]; then
              chmod +x scripts/generate-proto.sh
              ./scripts/generate-proto.sh
            fi

      - id: security-check
        name: security check
        entry: bash
        language: system
        types: [go]
        args:
          - -c
          - |
            # Check for common security issues
            if command -v gosec >/dev/null 2>&1; then
              gosec -quiet ./...
            else
              echo "gosec not found, skipping security check"
            fi
        pass_filenames: false

      - id: coverage-check
        name: coverage check
        entry: bash
        language: system
        types: [go]
        args:
          - -c
          - |
            # Check test coverage
            COVERAGE=$(go test ./internal/storage ./internal/config -cover | grep "coverage:" | tail -1 | awk '{print $3}' | sed 's/%//')
            if [ -n "$COVERAGE" ]; then
              echo "Test coverage: $COVERAGE%"
              if [ $(echo "$COVERAGE < 70" | bc -l 2>/dev/null || echo "0") -eq 1 ]; then
                echo "Warning: Test coverage below 70%"
              fi
            fi
        pass_filenames: false